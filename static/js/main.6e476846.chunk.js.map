{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","handleNewTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","userLinkStyle","cursor","UserLink","usernameOUserLink","style","children","UserDisplay","userOUserDisplay","isFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userOUserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","user","didFollowToggle","isProfileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","isDidLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","tweetOParentTweet","retweeterOParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","isHidden","actionTweet","setActionTweet","classNameVar","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","isTweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","FeedList","FeedTweetsComponent","ArgFeedTweetsList","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setTweet","apiTweetDetail","createElement","tweetsEl","getElementById","ReactDOM","render","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.6e476846.chunk.js","sourcesContent":["function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = \"json\"\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n    if (csrftoken) {\r\n        // bỏ dòng dưới này đi thì sẽ KO bị CORS localhost:3000 & 8000\r\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403) {\r\n            const { detail } = xhr.response\r\n            if (detail === \"Authentication credentials were not provided.\") {\r\n                if (window.location.href.indexOf(\"login\") === -1) {\r\n                    window.location.href = \"/login?showLoginRequired=true\"\r\n                }\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        callback({ \"message\": \"The request was an error\" }, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n}\r\n","import { backendLookup } from \"../lookup\"\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\", \"/tweets/create\", callback, { content: newTweet })\r\n}\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = { id: tweetId, action: action }\r\n    backendLookup(\"POST\", \"/tweets/action\", callback, data)\r\n}\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\r\n}\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed\"\r\n    if (nextUrl !== null && nextUrl !== undefined) { // dùng cho pagination\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\nimport {\r\n    apiTweetAction\r\n} from './lookup'\r\n\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import React from 'react'\r\nimport { apiTweetCreate } from './lookup'\r\n\r\nexport function TweetCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const { handleNewTweet } = props\r\n    const handleBackendUpdate = (response, status) => {\r\n        if (status === 201) {\r\n            handleNewTweet(response)\r\n        } else {\r\n            console.log(response)\r\n            alert(\"An error occured please try again\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n    </div>\r\n}","import React from 'react'\r\n\r\nconst userLinkStyle = {\r\n    cursor: 'pointer'\r\n}\r\nexport function UserLink(props) {\r\n    const { usernameOUserLink } = props\r\n    const handleUserLink = () => {\r\n        window.location.href = `/profiles/${usernameOUserLink}`\r\n    }\r\n    return <span style={userLinkStyle} onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const { userOUserDisplay, isFullName, hideLink } = props\r\n    const nameDisplay = (isFullName) ? `${userOUserDisplay.first_name} ${userOUserDisplay.last_name} ` : null\r\n    return <React.Fragment>\r\n        {nameDisplay}\r\n        {\r\n            (hideLink) ? `@${userOUserDisplay.username}` : <UserLink usernameOUserLink={userOUserDisplay.username}>@{userOUserDisplay.username}</UserLink>\r\n        }\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture(props) {\r\n    const { userOUserPicture, hideLink } = props\r\n    const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n        {userOUserPicture.username.substring(0, 4)}\r\n    </span>\r\n    return (hideLink) ? userIdSpan : <UserLink username={userOUserPicture.username}>{userIdSpan}</UserLink>\r\n}","import React from 'react'\r\nimport numeral from 'numeral'\r\n\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { UserDisplay, UserPicture } from './components'\r\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup'\r\nimport { DisplayCount } from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n    const { user, didFollowToggle, isProfileLoading } = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = isProfileLoading ? \"Loading...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !isProfileLoading) {\r\n            // khi localhost:8000/admin đang là \"trangia61\" mà index.html(React) cũng là \"trangia61\" thì KO thể toogle!!!\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture userOUserPicture={user} hideLink />\r\n        <p><UserDisplay userOUserDisplay={user} isFullName hideLink /></p>\r\n        <p>\r\n            <DisplayCount>\r\n                {user.follower_count}\r\n            </DisplayCount> {(user.follower_count === 1 || user.follower_count === 0) ? \"follower\" : \"followers\"}\r\n        </p>\r\n        <p>\r\n            <DisplayCount>\r\n                {user.following_count}\r\n            </DisplayCount> following\r\n        </p>\r\n        <p>Location: {user.location}</p>\r\n        <p>Bio: {user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n    const { username } = props\r\n    const [isDidLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [isProfileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!isDidLookup) {\r\n            apiProfileDetail(username, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [username, isDidLookup, setDidLookup])\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n            if (status === 200) {\r\n                setProfile(response)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n    }\r\n    return (!isDidLookup) ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} isProfileLoading={isProfileLoading} /> : null\r\n} ","import { backendLookup } from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}`, callback)\r\n}\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = { action: `${action && action}`.toLowerCase() }\r\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\r\n}","import React, { useState } from 'react'\r\nimport { ActionBtn } from './buttons'\r\nimport {\r\n    UserDisplay,\r\n    UserPicture\r\n} from '../profiles'\r\n\r\nexport function ParentTweet(props) {\r\n    const { tweetOParentTweet, retweeterOParentTweet } = props\r\n    return tweetOParentTweet.parent ? <Tweet isRetweet retweeter={retweeterOParentTweet} hideActions className={' '} tweet={tweetOParentTweet.parent} /> : null\r\n}\r\nexport function Tweet(props) {\r\n    const { tweet, didRetweet, isHidden, className, isRetweet, retweeter } = props\r\n    const { user } = tweet\r\n    const [actionTweet, setActionTweet] = useState(tweet ? tweet : null)\r\n    let classNameVar = className ? className : 'col-10 mx-auto col-md-6'\r\n    classNameVar = (isRetweet) ? `${classNameVar} p-2 border rounded` : classNameVar\r\n    const path = window.location.pathname\r\n    const match = path.match(/tweets\\/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    const isDetail = (`${tweet.id}` === `${urlTweetId}`)\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/tweets/${tweet.id}`\r\n    }\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className={classNameVar}>\r\n        {isRetweet && <div className='mb-2'>\r\n            <span className='small text-muted'>Retweet via <UserDisplay userOUserDisplay={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n            <div className=''>\r\n                <UserPicture userOUserPicture={user} />\r\n            </div>\r\n            <div className='col-11'>\r\n                <div>\r\n                    <p>\r\n                        <UserDisplay isFullName userOUserDisplay={user} />\r\n                    </p>\r\n                    <p>{tweet.content}</p>\r\n                    <ParentTweet tweetOParentTweet={tweet} retweeterOParentTweet={user} />\r\n                </div>\r\n                <div className='btn btn-group px-0'>\r\n                    {actionTweet && !isHidden && <React.Fragment>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"like\", display: \"Likes\" }} />\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: \"Unlike\" }} />\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: \"Retweet\" }} />\r\n                    </React.Fragment>\r\n                    }\r\n                    {isDetail ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { apiTweetList } from './lookup'\r\nimport { Tweet } from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    //~~~~~~ STATE\r\n    const [tweetsInit, setTweetsInit] = useState([]) //init tweet\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [isTweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final) //final tweet\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n        if (!isTweetsDidSet) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results) //init tweet\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            //nếu ko có \"isTweetsDidSet\" thì sẽ là vòng lặp vô hạn apiTweetList(handleTweetListLookup) dẫn đến gọi API từ Django vô hạn > console python nhảy liên tục!!!\r\n            apiTweetList(props.username, handleTweetListLookup) //call API giống Axios: \"http://localhost:8000/api/tweets/\"\r\n        }\r\n    }, [tweetsInit, isTweetsDidSet, setTweetsDidSet, props.username])\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>\r\n        {\r\n            tweets.map((item, index) => {\r\n                return <Tweet\r\n                    tweet={item}\r\n                    didRetweet={handleDidRetweet}\r\n                    className='my-5 py-5 border bg-white text-dark'\r\n                    key={`${index}-{item.id}`} />\r\n            })\r\n        }\r\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { apiTweetFeed } from './lookup'\r\n\r\nimport { Tweet } from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [isTweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n        if (!isTweetsDidSet) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results)\r\n                    setTweetsDidSet(true)\r\n                }\r\n            }\r\n            apiTweetFeed(handleTweetListLookup)\r\n        }\r\n    }, [tweetsInit, isTweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                }\r\n            }\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className='my-5 py-5 border bg-white text-dark'\r\n            key={`${index}-{item.id}`} />\r\n    })}\r\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { TweetCreate } from './create'\r\nimport { Tweet } from './detail'\r\nimport { apiTweetDetail } from './lookup'\r\nimport { TweetsList } from './list'\r\nimport { FeedList } from './feed'\r\n\r\nexport function FeedComponent(props) {\r\n    return FeedTweetsComponent(props, FeedList)\r\n}\r\n\r\nfunction FeedTweetsComponent(props, ArgFeedTweetsList) {\r\n    //~~~~~~ STATE\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = (props.canTweet === \"false\") ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n\r\n    return <div className={props.className}>\r\n        {canTweet && <TweetCreate handleNewTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <ArgFeedTweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    return FeedTweetsComponent(props, TweetsList)\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const { tweetId } = props\r\n    //~~~~~~ STATE\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"There was an error finding your tweet.\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!didLookup) {\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from './tweets'\nimport { ProfileBadgeComponent } from './profiles'\n// import App from './App'\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme2\")\nif (tweetsEl) {\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), tweetsEl)\n}\nconst tweetFeedEl = document.getElementById(\"tweetme2-feed\")\nif (tweetFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\nconst tweetDetailElements = document.querySelectorAll(\".tweetme2-detail\")\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container)\n})\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme2-profile-badge\")\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset),\n    container)\n})"],"sourceRoot":""}