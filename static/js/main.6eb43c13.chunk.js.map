{"version":3,"sources":["lookup/components.js","tweets/components.js","App.js","index.js"],"names":["loadTweets","callback","method","endpoint","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","onload","response","status","onerror","e","console","log","send","lookup","TweetsComponent","props","className","textAreaRef","React","createRef","useState","newTweets","setNewTweets","onSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","ref","required","type","TweetsList","newTweetsProps","tweetsInit","setTweetsInit","tweets","setTweets","isTweetsDidSet","setTweetsDidSet","useEffect","final","concat","length","alert","map","item","index","Tweet","tweet","key","classNameVar","ActionBtn","tweetProps","actionProps","display","setLikes","isUserLike","setUserLike","actionDisplay","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eb43c13.chunk.js","sourcesContent":["function lookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = \"json\"\r\n    xhr.open(method, url)\r\n    xhr.onload = function () {\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        console.log(e)\r\n        callback({ \"message\": \"The request was an error\" }, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n}\r\n\r\nexport function loadTweets(callback) {\r\n    lookup(\"GET\", \"/tweets/\", callback)\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { loadTweets } from '../lookup'\r\n\r\nexport function TweetsComponent(props) {\r\n    const { className } = props\r\n    const textAreaRef = React.createRef()\r\n    //~~~~~~ STATE cha\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        let tempNewTweets = [...newTweets]\r\n        // change this to a server side call\r\n        tempNewTweets.unshift({\r\n            content: newVal,\r\n            likes: 0,\r\n            id: 12313\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={className}>\r\n        <div className='col-12 mb-3'>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' />\r\n                <button type='submit' className='btn btn-primary my-3'>Tạo tweet</button>\r\n            </form>\r\n        </div>\r\n        <TweetsList newTweetsProps={newTweets} />\r\n    </div>\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const { newTweetsProps } = props\r\n    //~~~~~~ STATE cha\r\n    const [tweetsInit, setTweetsInit] = useState([]) //init tweet\r\n    const [tweets, setTweets] = useState([])\r\n    const [isTweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...newTweetsProps].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final) //final tweet\r\n        }\r\n    }, [newTweetsProps, tweets, tweetsInit])\r\n    useEffect(() => {\r\n        if (!isTweetsDidSet) {\r\n            const myCallback = (response, status) => {\r\n                if (status === 200) {\r\n                    setTweetsInit(response) //init tweet\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            //nếu ko có \"isTweetsDidSet\" thì sẽ là vòng lặp vô hạn loadTweets(myCallback) dẫn đến gọi API từ Django vô hạn > console python nhảy liên tục!!!\r\n            loadTweets(myCallback) //call API giống Axios: \"http://localhost:8000/api/tweets/\"\r\n        }\r\n    }, [tweetsInit, isTweetsDidSet])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {tweets.map((item, index) => {\r\n                return <Tweet tweet={item} className='my-1 py-1 border text-dark' key={index} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const { tweet, className } = props\r\n    const classNameVar = className ? className : 'col-10 mx-auto col-md-6'\r\n    return <div className={classNameVar}>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <div className='btn btn-group'>\r\n            <ActionBtn tweetProps={tweet} actionProps={{ type: \"like\", display: \"Likes\" }} />\r\n            <ActionBtn tweetProps={tweet} actionProps={{ type: \"unlike\", display: \"Unlike\" }} />\r\n            <ActionBtn tweetProps={tweet} actionProps={{ type: \"retweet\", display: \"Retweet\" }} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweetProps, actionProps, className } = props\r\n    //phải là tweetProps.likes & tweetProps.isUserLike\r\n    //vì trên đã khai báo là: const [tweets, setTweets] = useState([])\r\n    //~~~~~~ STATE con\r\n    const [likes, setLikes] = useState(tweetProps.likes ? tweetProps.likes : 0)\r\n    const [isUserLike, setUserLike] = useState(tweetProps.isUserLike ? true : false)\r\n    const classNameVar = className ? className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = actionProps.display ? actionProps.display : 'Action'\r\n    const handleClick = event => {\r\n        event.preventDefault()\r\n        if (actionProps.type === 'like') {\r\n            if (isUserLike) {\r\n                setLikes(likes - 1)\r\n                setUserLike(false)\r\n            } else {\r\n                setLikes(likes + 1)\r\n                setUserLike(true)\r\n            }\r\n        }\r\n    }\r\n    const display = (actionProps.type === 'like') ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={classNameVar} onClick={handleClick}>{display}</button>\r\n}","import React from 'react'\nimport './App.css'\nimport { TweetsComponent } from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TweetsComponent />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}